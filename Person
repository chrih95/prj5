package prj5;

/**
* A class that represents a person with a major, hobby, region and 
* an array of their heard responses and an array of their like responses.
*/
public class Person {

    private MajorEnum major;
    private HobbyEnum hobby;
    private RegionEnum region;

    /**
     * Creates a new Person with a major, hobby, region, and arrays of whether
     * or not the Person has heard and liked certain songs 
     * 
     * @param major
     *            The major of the Person
     * @param hobby
     *            The hobby that the Person has
     * @param region
     *            The region the Person is from
     * @param heard
     *            The array of whether or not the Person has heard certain songs
     * @param liked
     *            The array of whether or not the Person has liked certain songs
     */
    public Person(MajorEnum major, HobbyEnum hobby, RegionEnum region, String[] heard,
            String[] liked) {

        this.major = major;
        this.hobby = hobby;
        this.region = region;
    }

    /**
     * Method gets the major of the Person
     * 
     * @return the Person's major
     */
    public MajorEnum getMajor() {
        return major;
    }

    /**
     * Method gets the hobby that the Person has
     * 
     * @return the Person's hobby
     */
    public HobbyEnum getHobby() {
        return hobby;
    }

    /**
     * Method gets the region that the Person is from
     * 
     * @return the Person's region
     */
    public RegionEnum getRegion() {
        return region;
    }

    /**
     * Method returns the String representation of the Person, including their
     * major, hobby, and region.
     * 
     * @return the String representation of the Person
     */
    @Override
    public String toString() {

        StringBuilder personString = new StringBuilder("[Major: ");
        switch(this.getMajor()) {
        
            case COMPSCI:
                personString.append("Computer Science");
                break;

            case MATH:
                personString.append("Math");
                break;

            case ENGINEERING:
                personString.append("Other Engineering");
                break;

            default:
                personString.append("Other Non-Engineering");
                break;
        }
        personString.append(", Hobby: ");
        
        switch(this.getHobby()) {
        
            case READING:
                personString.append("Reading");
                break;

            case SPORTS:
                personString.append("Sports");
                break;

            case MUSIC:
                personString.append("Music");
                break;

            default:
                personString.append("Art");
                break;
        }
        personString.append(", Region: ");

        switch(this.getRegion()) {
        
            case NORTHEAST:
                personString.append("Northeast");
                break;

            case SOUTHEAST:
                personString.append("Southeast");
                break;

            case USOTHER:
                personString.append("Other US region");
                break;

            default:
                personString.append("Outside of the US");
                break;
        }
        personString.append("]");
        return personString.toString();
    }
}
