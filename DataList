package prj5;

public class DataList {

    
    private LinkedList<Song> songList;
    private static LinkedList<Person> personList;
    
    /**
     * Creates a new DataList with LinkedLists of songs and people
     */
    public DataList() {
        
        songList = new LinkedList<Song>();
        personList = new LinkedList<Person>();
    }
    
    /**
     * Method returns the LinkedList of people
     * @return the LinkedList of people
     */
    public static LinkedList<Person> getPersonList() {
        
        return personList;
    }
    
    /**
     * Method returns the LinkedList of songs
     * @return the LinkedList of songs
     */
    public LinkedList<Song> getSongList() {
        
        return songList;
    }
    
    /**
     * Method adds a Song to the LinkedList of songs
     * @param newSong    The Song being added to the songList
     */
    public void addSong(Song newSong) {
        
        if (newSong != null) {
            
            songList.add(newSong);
        }
    }

    /**
     * Method adds a Person to the LinkedList of people
     * @param newPerson    The Person being added to the personList
     */
    public void addPerson(Person newPerson) {
        
        if (newPerson != null) {
            
            personList.add(newPerson);
        }
    }
    
    @Override
    public String toString() {

        StringBuilder songString = new StringBuilder("");
        for (int i = 0; i < songList.getLength() - 1; i++) {
            
            songString.append(songList.getEntry(i).toString());
        }
        
        return songString.toString();
    }

    /**
     * Method sorts the songList by title
     */
    public void sortByTitle() {
        
        CompareTitle titleCompare = new CompareTitle();
        songList.insertionSort(titleCompare);
    }
    
    /**
     * Method sorts the songList by year
     */
    public void sortByYear() {
        
        CompareYear yearCompare = new CompareYear();
        songList.insertionSort(yearCompare);
    }
    
    /**
     * Method sorts the songList by genre
     */
    public void sortByGenre() {
        
        CompareGenre genreCompare = new CompareGenre();
        songList.insertionSort(genreCompare);
    }
    
    /**
     * Method sorts the songList by genre
     */
    public void sortByArtist() {
        
        CompareArtist artistCompare = new CompareArtist();
        songList.insertionSort(artistCompare);
    }
}
